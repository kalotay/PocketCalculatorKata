// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace PocketCalculator.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Backspace")]
    public partial class BackspaceFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "backspace.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Backspace", @"If you've just entered the last digit of your screen-filling
number wrong, you probably don't want to start over from the
beginning. Pressing C is the nuke-from-orbit option, let's be
kind and enable people to edit numbers. Adding backspace is
the install-nuclear-power-plant option.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
  #line 9
    testRunner.Given("I have a pocket calculator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
    testRunner.And("it is turned on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deleting the last digit of an integer")]
        public virtual void DeletingTheLastDigitOfAnInteger()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deleting the last digit of an integer", ((string[])(null)));
#line 12
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 13
    testRunner.When("I press \"1 2 3 >\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
    testRunner.Then("the display shows \"12.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deleting all the digits of an integer")]
        public virtual void DeletingAllTheDigitsOfAnInteger()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deleting all the digits of an integer", ((string[])(null)));
#line 16
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 17
    testRunner.When("I press \"1 2 3 > > >\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
    testRunner.Then("the display shows \"0.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Make sure it\'s really dead")]
        public virtual void MakeSureItSReallyDead()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Make sure it\'s really dead", ((string[])(null)));
#line 20
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 21
    testRunner.When("I press \"1 2 3 > > > >\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
    testRunner.Then("the display shows \"0.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deleting the last digit of a decimal")]
        [NUnit.Framework.CategoryAttribute("decimal")]
        public virtual void DeletingTheLastDigitOfADecimal()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deleting the last digit of a decimal", new string[] {
                        "decimal"});
#line 25
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 26
    testRunner.When("I press \"1 2 3 . 4 5 >\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
    testRunner.Then("the display shows \"123.4\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Changing the last digit of a decimal")]
        [NUnit.Framework.CategoryAttribute("decimal")]
        public virtual void ChangingTheLastDigitOfADecimal()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Changing the last digit of a decimal", new string[] {
                        "decimal"});
#line 30
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 31
    testRunner.When("I press \"1 2 3 . 4 5 > 9\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
    testRunner.Then("the display shows \"123.49\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deleting all decimal places of a decimal")]
        public virtual void DeletingAllDecimalPlacesOfADecimal()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deleting all decimal places of a decimal", ((string[])(null)));
#line 34
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 35
    testRunner.When("I press \"1 2 3 . 4 5 > >\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
    testRunner.Then("the display shows \"123.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Changing all decimal places of a decimal")]
        [NUnit.Framework.CategoryAttribute("decimal")]
        public virtual void ChangingAllDecimalPlacesOfADecimal()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Changing all decimal places of a decimal", new string[] {
                        "decimal"});
#line 39
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 40
    testRunner.When("I press \"1 2 3 . 4 5 > > 8 9\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
    testRunner.Then("the display shows \"123.89\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("We didn\'t really want a decimal after all")]
        public virtual void WeDidnTReallyWantADecimalAfterAll()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("We didn\'t really want a decimal after all", ((string[])(null)));
#line 43
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 46
    testRunner.When("I press \"1 2 3 . 4 > > 9\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
    testRunner.Then("the display shows \"129.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("We didn\'t even mean to press \".\"")]
        public virtual void WeDidnTEvenMeanToPress_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("We didn\'t even mean to press \".\"", ((string[])(null)));
#line 49
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 52
    testRunner.When("I press \"1 2 3 . > 9\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 53
    testRunner.Then("the display shows \"129.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Why was \".\" the first character we pressed?")]
        public virtual void WhyWas_TheFirstCharacterWePressed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Why was \".\" the first character we pressed?", ((string[])(null)));
#line 55
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 58
    testRunner.When("I press \". 0 > > 1 2 3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
    testRunner.Then("the display shows \"123.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Maybe we wanted to press \".\" after all")]
        public virtual void MaybeWeWantedToPress_AfterAll()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Maybe we wanted to press \".\" after all", ((string[])(null)));
#line 61
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 62
    testRunner.When("I press \". > . 1 2 3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
    testRunner.Then("the display shows \"0.123\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit a negative number")]
        [NUnit.Framework.CategoryAttribute("negative")]
        public virtual void EditANegativeNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit a negative number", new string[] {
                        "negative"});
#line 66
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 67
    testRunner.When("I press \"1 2 3 +/- >\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
    testRunner.Then("the display shows \"-12.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Remove a negative number entirely")]
        public virtual void RemoveANegativeNumberEntirely()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Remove a negative number entirely", ((string[])(null)));
#line 70
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 73
    testRunner.When("I press \"1 2 3 +/- > > >\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
    testRunner.Then("the display shows \"0.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Remove a negative zero and replace with a positive number")]
        public virtual void RemoveANegativeZeroAndReplaceWithAPositiveNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Remove a negative zero and replace with a positive number", ((string[])(null)));
#line 76
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 77
    testRunner.When("I press \". 0 +/- > > 1 2 3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
    testRunner.Then("the display shows \"123.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Make an edited zero negative")]
        [NUnit.Framework.CategoryAttribute("negative")]
        public virtual void MakeAnEditedZeroNegative()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Make an edited zero negative", new string[] {
                        "negative"});
#line 81
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 84
    testRunner.When("I press \"> +/-\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 85
    testRunner.Then("the display shows \"-0.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Performing a calculation after editing the last number")]
        public virtual void PerformingACalculationAfterEditingTheLastNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Performing a calculation after editing the last number", ((string[])(null)));
#line 87
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 90
    testRunner.When("I press \"1 2 3 + 4 5 6 > =\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
    testRunner.Then("the display shows \"168.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A calculation where the second number came from editing the first")]
        public virtual void ACalculationWhereTheSecondNumberCameFromEditingTheFirst()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A calculation where the second number came from editing the first", ((string[])(null)));
#line 93
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 96
    testRunner.When("I press \"1 2 3 + > =\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
    testRunner.Then("the display shows \"135.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
